package com.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.zhang.chat.bean.chat.Message;
import com.zhang.chat.bean.chat.MessageList;
import com.zhang.chat.bean.chat.Verification;
import com.zhang.chat.bean.Friend;
import com.zhang.chat.bean.User;

import com.greendao.gen.MessageDao;
import com.greendao.gen.MessageListDao;
import com.greendao.gen.VerificationDao;
import com.greendao.gen.FriendDao;
import com.greendao.gen.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig messageDaoConfig;
    private final DaoConfig messageListDaoConfig;
    private final DaoConfig verificationDaoConfig;
    private final DaoConfig friendDaoConfig;
    private final DaoConfig userDaoConfig;

    private final MessageDao messageDao;
    private final MessageListDao messageListDao;
    private final VerificationDao verificationDao;
    private final FriendDao friendDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        messageListDaoConfig = daoConfigMap.get(MessageListDao.class).clone();
        messageListDaoConfig.initIdentityScope(type);

        verificationDaoConfig = daoConfigMap.get(VerificationDao.class).clone();
        verificationDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        messageDao = new MessageDao(messageDaoConfig, this);
        messageListDao = new MessageListDao(messageListDaoConfig, this);
        verificationDao = new VerificationDao(verificationDaoConfig, this);
        friendDao = new FriendDao(friendDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Message.class, messageDao);
        registerDao(MessageList.class, messageListDao);
        registerDao(Verification.class, verificationDao);
        registerDao(Friend.class, friendDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        messageDaoConfig.clearIdentityScope();
        messageListDaoConfig.clearIdentityScope();
        verificationDaoConfig.clearIdentityScope();
        friendDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public MessageListDao getMessageListDao() {
        return messageListDao;
    }

    public VerificationDao getVerificationDao() {
        return verificationDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
